Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./ir.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
usbTxStatus1        0xc               ./usbdrv/usbdrv.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
global              0x1               ./main.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./ir.o
LOAD ./main.o
LOAD ./uart.o
LOAD ./usb.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x158c
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026       0x5e ./usbdrv/usbdrv.o
                0x00000026                usbDescriptorString0
                0x0000002a                usbDescriptorStringVendor
                0x0000003a                usbDescriptorStringDevice
                0x00000050                usbDescriptorDevice
                0x00000062                usbDescriptorConfiguration
 .progmem.data  0x00000084       0x5b ./usb.o
                0x00000084                usbDescriptorHidReport
                0x000000e0                . = ALIGN (0x2)
 *fill*         0x000000df        0x1 00
                0x000000e0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000e0        0x0 linker stubs
 *(.trampolines*)
                0x000000e0                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000e0                __ctors_start = .
 *(.ctors)
                0x000000e0                __ctors_end = .
                0x000000e0                __dtors_start = .
 *(.dtors)
                0x000000e0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000e0        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000e0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000e0        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ec       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x000000ec                __do_copy_data
 .init4         0x00000102       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000102                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000112        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000116        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000116                __vector_12
                0x00000116                __bad_interrupt
                0x00000116                __vector_6
                0x00000116                __vector_3
                0x00000116                __vector_11
                0x00000116                __vector_13
                0x00000116                __vector_17
                0x00000116                __vector_7
                0x00000116                __vector_5
                0x00000116                __vector_4
                0x00000116                __vector_9
                0x00000116                __vector_15
                0x00000116                __vector_8
                0x00000116                __vector_14
                0x00000116                __vector_10
                0x00000116                __vector_16
                0x00000116                __vector_18
 .text          0x00000118        0x0 ./usbdrv/oddebug.o
 .text          0x00000118      0x282 ./usbdrv/usbdrv.o
                0x00000118                usbSetInterrupt
                0x00000164                usbPoll
                0x00000380                usbInit
 .text          0x0000039a      0x2a6 ./usbdrv/usbdrvasm.o
                0x0000039a                usbCrc16
                0x000003c4                usbCrc16Append
                0x000003cc                __vector_1
 .text          0x00000640      0xcfa ./ir.o
                0x000011d8                ir_decode
                0x0000128c                __vector_2
                0x000012e2                ir_init
 .text          0x0000133a       0x80 ./main.o
                0x0000133a                main
 .text          0x000013ba        0x0 ./uart.o
 .text          0x000013ba      0x1a6 ./usb.o
                0x000013e0                usbFunctionSetup
                0x00001444                idle_timer_init
                0x0000144a                idle_timer
                0x00001492                usb_poll
                0x000014c8                usb_init
                0x000014cc                usb_disconnect
                0x000014d0                usb_connect
                0x000014d4                usb_interruptisready
                0x000014dc                reset_timeout
                0x000014e4                mouse_move
                0x00001514                mouse_click
                0x00001520                mouse_rclick
                0x0000152c                kbd_send
 .text          0x00001560        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x00001560        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x00001560        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x00001560        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00001560                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001560       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x00001560                __udivmodhi4
 .text.libgcc   0x00001588        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001588        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001588        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00001588                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001588        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00001588                exit
                0x00001588                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001588        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000158c                _etext = .

.data           0x00800060       0x7a load address 0x0000158c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x2 ./usbdrv/usbdrv.o
                0x00800060                usbTxLen
 .data          0x00800062        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800062       0x70 ./ir.o
 .data          0x008000d2        0x0 ./main.o
 .data          0x008000d2        0x0 ./uart.o
 .data          0x008000d2        0x7 ./usb.o
 .data          0x008000d9        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x008000d9        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x008000d9        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x008000d9        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000da                . = ALIGN (0x2)
 *fill*         0x008000d9        0x1 00
                0x008000da                _edata = .
                0x008000da                PROVIDE (__data_end, .)

.bss            0x008000da      0x150
                0x008000da                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000da        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x008000da        0x0 ./usbdrv/oddebug.o
 .bss           0x008000da        0x1 ./usbdrv/usbdrv.o
 .bss           0x008000db        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x008000db      0x113 ./ir.o
 .bss           0x008001ee        0x0 ./main.o
 .bss           0x008001ee        0x0 ./uart.o
 .bss           0x008001ee        0x5 ./usb.o
 .bss           0x008001f3        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x008001f3        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x008001f3        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x008001f3        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008001f3       0x36 ./usbdrv/usbdrv.o
                0x008001f3                usbTxBuf
                0x008001fe                usbTxStatus1
                0x0080020a                usbDeviceAddr
                0x0080020b                usbRxToken
                0x0080020c                usbInputBufOffset
                0x0080020d                usbMsgPtr
                0x0080020f                usbRxLen
                0x00800210                usbNewDeviceAddr
                0x00800211                usbCurrentTok
                0x00800212                usbConfiguration
                0x00800213                usbRxBuf
 COMMON         0x00800229        0x1 ./main.o
                0x00800229                global
                0x0080022a                PROVIDE (__bss_end, .)
                0x0000158c                __data_load_start = LOADADDR (.data)
                0x00001606                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080022a        0x0
                0x0080022a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080022a                PROVIDE (__noinit_end, .)
                0x0080022a                _end = .
                0x0080022a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(IRLib.elf elf32-avr)
LOAD linker stubs
